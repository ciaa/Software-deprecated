Uso de Google C++ Style Guide. --> http://google-styleguide.googlecode.com/svn/trunk/cppguide.xml
Documentado para Doxygen. --> http://www.doxygen.org

Bug Tracker:
	http://www.proyecto­-ciaa.com.ar


Las herramientas de desarrollo a utilizar son:
	Administraci&oacute;n:
		○ Wiki para el desarrollo del proyecto: http://www.proyecto­ciaa.com.ar/devwiki
		○ Administración del proyecto y bug tracker: http://www.proyecto­ciaa.com.ar/project
	Desarrollo:
		○ IDE de desarrollo: http://qt­project.org/wiki/Category:Tools::QtCreator (a preferencia)
	Bibliotecas:
		○ Biblioteca gráfica
		○ Boost: http://www.boost.org/


Source: https://github.com/ciaa/Software.git


- Configuraci&acute;n de make:
  + git clone https://github.com/ciaa/Software.git
  + cd Software
  + mkdir build
  + cd build
  + sudo apt-get install cmake
  + cmake ..

  En adici&oacute;n pudieras necesitar especificar la variable
  &quot;PATH_TO_QT_CMAKE_MODULES&quot; que es el directorio donde
  est&eacute;n instalados los m&oacute;dulos de cmake para qt, en mi
  caso por ejemplo ser&iacute;a:
	cmake .. -DCMAKE_PREFIX_PATH=/opt/Qt5.2.0/5.2.0/gcc/lib/cmake.

- Generaci&oacute;n de documentaci&oacute;n:
  + Instalar doxygen y graphviz (apt-get install graphviz doxygen).
  + Una vez configurado el proyecto con cmake como se explica arriba,
  puedes proceder a ejecutar make doc_forced.


- En un entorno linux se pudieran virtualizar puertos series con el comando
  socat para realizar pruebas unitarias al m&oacute;dulo Comms/Drivers:</br>
  sudo socat -d -d -d pty,raw,echo=1 pty,raw,echo=1

